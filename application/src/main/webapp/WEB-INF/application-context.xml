<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.0.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="exposeContextBeansAsAttributes" value="true"/>
    </bean>

    <bean id="placeholderConfigurer"
          class="org.springframework.web.context.support.ServletContextPropertyPlaceholderConfigurer">
        <property name="contextOverride" value="true"/>
        <property name="searchContextAttributes" value="true"/>
        <property name="location" value="classpath:default.properties"/>
    </bean>

    <context:component-scan base-package="com.fairviewiq"><context:exclude-filter type="regex" expression="com.fairviewiq.spring.controllers.*"/></context:component-scan>
    <!--suppress UnparsedCustomBeanInspection -->
    <context:spring-configured/>
    <context:load-time-weaver/>

    <security:http>

        <security:intercept-url pattern="/login.jsp*" filters="none"/>
        <security:intercept-url pattern="/favicon.ico" filters="none"/>
        <security:intercept-url pattern="/js/**" filters="none"/>
        <security:intercept-url pattern="/css/**" filters="none"/>
        <security:intercept-url pattern="/images/**" filters="none"/>
        <security:intercept-url pattern="/login.do*" filters="none"/>

        <security:intercept-url pattern="/bd.jsp" access="ROLE_ADMIN" requires-channel="any"/>

        <security:intercept-url pattern="/neo/shell*" access="ROLE_ADMIN,ROLE_ROOT" requires-channel="any"/>

        <security:intercept-url pattern="/**" access="ROLE_USER, ROLE_HR" requires-channel="any"/>

        <security:http-basic/>
        <security:form-login login-page="/login.jsp" default-target-url="/index.jsp"/>
        <security:logout logout-success-url="/login.jsp"/>
        <security:remember-me key="fairview" user-service-ref="neoUserDetailsService"/>

    </security:http>


    <bean id="ajaxQuirksFilter" class="com.fairviewiq.spring.security.AjaxQuirksFilter">
        <property name="uriPatterns">
            <util:list>
                <value>/neo/ajax/**</value>
                <value>/fairview/ajax/**</value>
            </util:list>
        </property>
    </bean>

    <bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
        <constructor-arg value="256"/>
    </bean>

    <bean id="neoUserDetailsService" class="se.codemate.spring.security.NeoUserDetailsService"/>

    <bean id="fairviewUserDetailsService" class="com.fairviewiq.spring.security.FairviewUserDetailsService"/>

    <security:authentication-manager alias="authenticationManager">

        <security:authentication-provider user-service-ref="fairviewUserDetailsService">
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>

        <security:authentication-provider user-service-ref="neoUserDetailsService">
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>

        <!-- ROOT Shell Backdoor -->
        <security:authentication-provider>
            <security:password-encoder ref="passwordEncoder"/>
            <security:user-service>
                <security:user name="root" password="cde453f03466ff7ab08284a61b6d3043888bc25256927366fe77aa6262d794a9"
                               authorities="ROLE_ROOT"/>
            </security:user-service>
        </security:authentication-provider>

    </security:authentication-manager>

    <security:global-method-security jsr250-annotations="enabled"/>

    <!-- Node Database -->

    <bean id="neo" class="org.neo4j.kernel.EmbeddedGraphDatabase" destroy-method="shutdown">
        <constructor-arg value="${neo4j.root}"/>
    </bean>

    <bean id="neoSearch" class="se.codemate.neo4j.NeoSearch" destroy-method="shutdown">
        <constructor-arg ref="neo"/>
    </bean>

    <util:set id="uniqueNodePropertyNames" set-class="java.util.TreeSet" value-type="java.lang.String">
        <value>UUID</value>
        <value>username</value>
    </util:set>

    <util:set id="uniqueRelationshipPropertyNames" set-class="java.util.TreeSet" value-type="java.lang.String">
        <value>UUID</value>
    </util:set>

    <bean id="neoServiceInitializer" class="se.codemate.spring.initializer.NeoServiceInitializer">
        <constructor-arg ref="neo"/>
        <property name="neoSearch" ref="neoSearch"/>
        <property name="configuration" value="classpath:neo4j.xml"/>
        <property name="forceInitialization" value="false"/>
        <property name="indexGraph" value="${neo4j.index}"/>
    </bean>

    <!-- Spring E-Mail Services -->

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${smtp.host}"/>
        <property name="port" value="${smtp.port}"/>
    </bean>


</beans>