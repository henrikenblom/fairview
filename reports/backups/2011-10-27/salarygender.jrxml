<?xml version="1.0" encoding="UTF-8"?>
<jasperReport xmlns="http://jasperreports.sourceforge.net/jasperreports" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://jasperreports.sourceforge.net/jasperreports http://jasperreports.sourceforge.net/xsd/jasperreport.xsd" name="Lönenivåer" pageWidth="595" pageHeight="842" columnWidth="535" leftMargin="20" rightMargin="20" topMargin="20" bottomMargin="20">
	<property name="description" value="Grafer:Statistik över lönenivåer"/>
	<parameter name="NEO" class="org.neo4j.graphdb.GraphDatabaseService" isForPrompting="false"/>
	<parameter name="NEO_SEARCH" class="se.codemate.neo4j.NeoSearch" isForPrompting="false"/>
	<parameter name="NEO_URL" class="java.lang.String" isForPrompting="false">
		<defaultValueExpression><![CDATA["http://fairview.codemate.se:8080"]]></defaultValueExpression>
	</parameter>
	<parameter name="NEO_USERNAME" class="java.lang.String" isForPrompting="false">
		<defaultValueExpression><![CDATA["admin"]]></defaultValueExpression>
	</parameter>
	<parameter name="NEO_PASSWORD" class="java.lang.String" isForPrompting="false">
		<defaultValueExpression><![CDATA["secret"]]></defaultValueExpression>
	</parameter>
	<queryString language="neo">
		<![CDATA[GROOVY {

import org.neo4j.graphdb.*
import se.codemate.neo4j.*

Node root = neo.getReferenceNode();

List<PropertyContainer> results = new LinkedList<PropertyContainer>();

def returnEvaluator = {
  if (it.depth() == 3) {
    String salary = it.currentNode().getProperty("emp_salary", null);
    if (salary != null) {
      try {
        MapPropertyContainer propertyContainer = new MapPropertyContainer();
        propertyContainer.setProperty("gender", it.previousNode.getProperty("gender", "?"));
        propertyContainer.setProperty("salary", Integer.parseInt(salary.replaceAll("\\s+", "")));
        results.add(propertyContainer);
        return true;
      } catch (NumberFormatException exception) {
        return false;
      }
    }
  }
  return false;
} as ReturnableEvaluator

def stopEvaluator = {
  return it.depth() == 3;
} as StopEvaluator

root.traverse(
        Traverser.Order.DEPTH_FIRST,
        stopEvaluator,
        returnEvaluator,
        SimpleRelationshipType.withName("HAS_ORGANIZATION"),
        Direction.OUTGOING,
        SimpleRelationshipType.withName("HAS_EMPLOYEE"),
        Direction.OUTGOING,
        SimpleRelationshipType.withName("HAS_EMPLOYMENT"),
        Direction.OUTGOING
).getAllNodes();

return results;

}]]>
	</queryString>
	<field name="_id" class="java.lang.Long"/>
	<field name="_type" class="java.lang.String"/>
	<field name="gender" class="java.lang.String"/>
	<field name="salary" class="java.lang.Integer"/>
	<sortField name="gender"/>
	<sortField name="salary"/>
	<variable name="salary5k" class="java.lang.Integer" resetType="None">
		<variableExpression><![CDATA[new Integer(5 * ($F{salary}.intValue() / 5000))]]></variableExpression>
	</variable>
	<group name="GenderGroup">
		<groupExpression><![CDATA[$F{gender}]]></groupExpression>
	</group>
	<group name="SalaryGroup">
		<groupExpression><![CDATA[$V{salary5k}]]></groupExpression>
	</group>
	<background>
		<band/>
	</background>
	<title>
		<band height="79">
			<staticText>
				<reportElement x="0" y="0" width="555" height="79" forecolor="#003366"/>
				<textElement verticalAlignment="Middle">
					<font fontName="Verdana" size="30"/>
				</textElement>
				<text><![CDATA[Lönenivåer]]></text>
			</staticText>
		</band>
	</title>
	<pageHeader>
		<band height="30">
			<textField pattern="yyyy-MM-dd">
				<reportElement x="0" y="0" width="555" height="30"/>
				<textElement verticalAlignment="Middle">
					<font fontName="Verdana" size="11"/>
				</textElement>
				<textFieldExpression class="java.util.Date"><![CDATA[new java.util.Date()]]></textFieldExpression>
			</textField>
		</band>
	</pageHeader>
	<detail>
		<band/>
	</detail>
	<summary>
		<band height="285">
			<barChart>
				<chart isShowLegend="true">
					<reportElement x="0" y="0" width="555" height="285"/>
					<chartTitle position="Top"/>
					<chartSubtitle/>
					<chartLegend position="Right"/>
				</chart>
				<categoryDataset>
					<categorySeries>
						<seriesExpression><![CDATA[$F{gender}.equals("F") ? "Kvinna" : "Man"]]></seriesExpression>
						<categoryExpression><![CDATA[$V{salary5k} + "-" + new Integer($V{salary5k}.intValue()+4)]]></categoryExpression>
						<valueExpression><![CDATA[$V{SalaryGroup_COUNT}]]></valueExpression>
					</categorySeries>
				</categoryDataset>
				<barPlot isShowLabels="false" isShowTickLabels="true" isShowTickMarks="true">
					<plot backgroundAlpha="1.0" foregroundAlpha="1.0" labelRotation="0.0">
						<seriesColor seriesOrder="0" color="#006699"/>
						<seriesColor seriesOrder="1" color="#660000"/>
						<seriesColor seriesOrder="2" color="#006633"/>
					</plot>
					<categoryAxisLabelExpression><![CDATA["Löner i tusental"]]></categoryAxisLabelExpression>
					<categoryAxisFormat>
						<axisFormat labelColor="#003366">
							<labelFont>
								<font size="11"/>
							</labelFont>
							<tickLabelFont/>
						</axisFormat>
					</categoryAxisFormat>
					<valueAxisLabelExpression><![CDATA["Antal"]]></valueAxisLabelExpression>
					<valueAxisFormat>
						<axisFormat labelColor="#003366">
							<labelFont>
								<font size="11"/>
							</labelFont>
							<tickLabelFont/>
						</axisFormat>
					</valueAxisFormat>
				</barPlot>
			</barChart>
		</band>
	</summary>
</jasperReport>
